# SPDX-FileCopyrightText: 2025 GFZ Helmholtz Centre for Geosciences
#
# SPDX-License-Identifier: Apache-2.0

[build-system]
requires = ["setuptools>=45", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "swvo"
authors = [
    { name = "Bernhard Haas, Sahil Jhawar, Stefano Bianco, Ruggero Vasile", email = "sec15@gfz.de" },
]
description = "Tools for downloading and reading space-weather data and geomagnetic indices."
readme = "README.md"
requires-python = ">=3.11"
license = "Apache-2.0"
license-files = ["LICENSES/Apache-2.0.txt"]
classifiers = [
    "Programming Language :: Python :: 3",
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Operating System :: POSIX',
    'Operating System :: Unix',
    'Operating System :: MacOS',
]
dynamic = ["dependencies", "optional-dependencies", "version"]


[tool.setuptools.dynamic]
version = { attr = "swvo.__version__" }
dependencies = { file = ["requirements.txt"] }
optional-dependencies.docs = { file = ["docs/requirements.txt"] }

[project.urls]
Homepage = "https://github.com/GFZ/SWVO"
Documentation = "https://swvo.readthedocs.io/en/latest/"
Download = "https://pypi.org/project/swvo/#files"
Tracker = "https://github.com/GFZ/SWVO/issues"

[tool.setuptools.packages.find]
include = ["swvo*"]


[tool.coverage.run]
source = ["swvo"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    "raise KeyError",
    "except KeyError",
    "raise ValueError",
    "except JSONDecodeError:",
    "raise requests.exceptions.RequestException",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if False:",
    'if __name__ == "__main__":',
    "err =",
    "logger.error",
    "raise",
]
ignore_errors = true

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
addopts = "--verbose -r s"

[tool.bumpver]
current_version = "1.1.0"
version_pattern = "MAJOR.MINOR.PATCH[PYTAGNUM]"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"']
"swvo/__init__.py" = ['__version__ = "{version}"']
